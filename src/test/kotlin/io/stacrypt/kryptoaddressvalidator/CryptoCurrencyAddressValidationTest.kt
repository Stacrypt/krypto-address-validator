package io.stacrypt.kryptoaddressvalidator

import io.stacrypt.kryptoaddressvalidator.cryptocurrency.*
import org.junit.Assert
import org.junit.Test

class CryptoCurrencyAddressValidationTest {
    @ExperimentalUnsignedTypes
    @Test
    fun testBitcoinAddressValidator() {
        // Main network
        Assert.assertTrue(
            "12KYrjTdVGjFMtaxERSk3gphreJ5US8aUP".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "12QeMLzSrB8XH8FvEzPMVoRxVAzTr5XM2y".isValidCryptoCurrencyAddress(
                CryptoCurrency.BTC,
                BitcoinNetwork.Mainnet
            )
        )

        Assert.assertTrue(
            "17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem".isValidCryptoCurrencyAddress(
                CryptoCurrency.BTC,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "3EktnHQD7RiAE6uzMj2ZifT9YgRrkSgzQX".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "mipcBbFg9gMiCh81Kj8tqqdgoZub1ZJRfn".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "2MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "3EktnHQD7RiAE6uzMj2ZifT9Yg".isValidCryptoCurrencyAddress(
                CryptoCurrency.BTC,
                BitcoinNetwork.Mainnet
            )
        )

        Assert.assertFalse(
            "4MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )


        // Test network
        Assert.assertFalse(
            "2MzQwSSnBHWHq47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "4MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.BTC,
                BitcoinNetwork.Testnet
            )
        )
        Assert.assertTrue(
            "mipcBbFg9gMiCh81Kj8tqqdgoZub1ZJRfn".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Testnet
            )
        )
        Assert.assertTrue(
            "2MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.BTC,
                BitcoinNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "3EktnHQD7RiAE6uzMj2ZifT9YgRrkSgzQX".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Testnet
            )
        )

        // Segwit addresses
        // Main network
        Assert.assertTrue(
            "bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t4".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "BC1QW508D6QEJXTDG4Y5R3ZARVARY0C5XW7KV8F3T4".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "bc1q2t63ewm3mvh0ztmnmezxm7s0tefknenxlrlwrk".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "bc1qar0srrr7xfkvy5l643lydnw9re59gtzzwf5mdq".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "bc1qc7slrfxkknqcq2jevvvkdgvrt8080852dfjewde450xdlk4ugp7szw5tk9".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc1pw508d6qejxtdg4y5r3zarvary0c5xw7kw508d6qejxtdg4y5r3zarvary0c5xw7k7grplx".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc1pw508d6qejxtdg4y5r3zarvary0c5xw7kw508d6qejxtdg4y5r3zarvary0c5xw7k7grplx".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "BC1SW50QA3JX3S".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc1zw508d6qejxtdg4y5r3zarvaryvg6kdaj".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t5".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "BC13W508D6QEJXTDG4Y5R3ZARVARY0C5XW7KN40WF2".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc1rw5uspcuh".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc10w508d6qejxtdg4y5r3zarvary0c5xw7kw508d6qejxtdg4y5r3zarvary0c5xw7kw5rljs90".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "BC1QR508D6QEJXTDG4Y5R3ZARVARYV98GJ9P".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc1zw508d6qejxtdg4y5r3zarvaryvqyzf3du".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "tb1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3q0sL5k7".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc1zw508d6qejxtdg4y5r3zarvaryvqyzf3du".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "tb1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3pjxtptv".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc1gmk9yu".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "bc1zw508d6qejxtdg4y5r3zarvaryvqyzf3du".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Mainnet
            )
        )
        // Test network
        Assert.assertTrue(
            "tb1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3q0sl5k7".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Testnet
            )
        )
        Assert.assertTrue(
            "tb1qqqqqp399et2xygdj5xreqhjjvcmzhxw4aywxecjdzew6hylgvsesrxh6hy".isValidCryptoCurrencyAddress(
                CryptoCurrency.Bitcoin,
                BitcoinNetwork.Testnet
            )
        )
    }

    @ExperimentalUnsignedTypes
    @Test
    fun testLitecoinAddressValidator() {
        // Main network
        Assert.assertTrue(
            "LW2E9WRvyY3GHbPGqDMnBkrfCUkxBRU642".isValidCryptoCurrencyAddress(
                CryptoCurrency.Litecoin,
                LitecoinNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "3CKuQw6LJJsfdoSkZ2JrMZLQgyBeuHhSRD".isValidCryptoCurrencyAddress(
                CryptoCurrency.Litecoin,
                LitecoinNetwork.Mainnet
            )
        )

        Assert.assertFalse(
            "17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem".isValidCryptoCurrencyAddress(
                CryptoCurrency.LTC,
                LitecoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "mipcBbFg9gMiCh81Kj8tqqdgoZub1ZJRfn".isValidCryptoCurrencyAddress(
                CryptoCurrency.LTC,
                LitecoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "2MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.Litecoin,
                LitecoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "3EktnHQD7RiAE6uzMj2ZifT9Yg".isValidCryptoCurrencyAddress(
                CryptoCurrency.Litecoin,
                LitecoinNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "4MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.Litecoin,
                LitecoinNetwork.Mainnet
            )
        )

        // Test network
        Assert.assertFalse(
            "2MzQwSSnBHWHq47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.Litecoin,
                LitecoinNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem".isValidCryptoCurrencyAddress(
                CryptoCurrency.Litecoin,
                LitecoinNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "3EktnHQD7RiAE6uzMj2ZifT9YgRrkSgzQX".isValidCryptoCurrencyAddress(
                CryptoCurrency.Litecoin,
                LitecoinNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "4MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.Litecoin,
                LitecoinNetwork.Testnet
            )
        )
    }

    @ExperimentalUnsignedTypes
    @Test
    fun testBitcoincashAddressValidator() {
        // Main network
        Assert.assertTrue(
            "12KYrjTdVGjFMtaxERSk3gphreJ5US8aUP".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "12QeMLzSrB8XH8FvEzPMVoRxVAzTr5XM2y".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "12QeMLzSrB8XH8FvEzPMVoRxVAzTr5XM2y".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "12QeMLzSrB8XH8FvEzPMVoRxVAzTr5XM2y".isValidCryptoCurrencyAddress(
                CryptoCurrency.BCH,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "1oNLrsHnBcR6dpaBpwz3LSwutbUNkNSjs".isValidCryptoCurrencyAddress(
                CryptoCurrency.BCH,
                BitcoinCashNetwork.Mainnet
            )
        )

        Assert.assertTrue(
            "3NJZLcZEEYBpxYEUGewU4knsQRn1WM5Fkt".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "3NJZLcZEEYBpxYEUGewU4knsQRn1WM5Fkt".isValidCryptoCurrencyAddress(
                CryptoCurrency.BCH,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "bitcoincash:qq4v32mtagxac29my6gwj6fd4tmqg8rysu23dax807".isValidCryptoCurrencyAddress(
                CryptoCurrency.BCH,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "bitcoincash:qrd9khmeg4nqag3h5gzu8vjt537pm7le85lcauzezc".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "qrd9khmeg4nqag3h5gzu8vjt537pm7le85lcauzezc".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "1LuZmXJfzf73ooUcC7BHKB92gjLEGv7eCh".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "mipcBbFg9gMiCh81Kj8tqqdgoZub1ZJRfn".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "2MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "4MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )
        Assert.assertFalse(
            "3EktnHQD7RiAE6uzMj2ZifT9Yg".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Mainnet
            )
        )

        // Test network
        Assert.assertTrue(
            "bchtest:qpq7dml7qr6kjpu5gau0t9sx6a3xvdmt8quv5jr3h0".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Testnet
            )
        )

        Assert.assertTrue(
            "qpq7dml7qr6kjpu5gau0t9sx6a3xvdmt8quv5jr3h0".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Testnet
            )
        )

        Assert.assertTrue(
            "mmXQsLex5dVjhTPZaHmhPc2EhyPXSNydS9".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "3EktnHQD7RiAE6uzMj2ZifT9YgRrkSgzQX".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "2MzQwSSnBHWHq47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Testnet
            )
        )
        Assert.assertFalse(
            "4MzQwSSnBHWHqSAqtTVQ6v47XtaisrJa1Vc".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Testnet
            )
        )
        Assert.assertTrue(
            "mzBc4XEFSdzCDcTxAgf6EZXgsZWpztRhef".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Testnet
            )
        )
        Assert.assertTrue(
            "2MxKEf2su6FGAUfCEAHreGFQvEYrfYNHvL7".isValidCryptoCurrencyAddress(
                CryptoCurrency.BitcoinCash,
                BitcoinCashNetwork.Testnet
            )
        )
    }

    @ExperimentalUnsignedTypes
    @Test
    fun testPolkadotAddressValidator() {
        Assert.assertTrue(
            "1iQPKJmghHbrRhUiMt2cNEuxYbR6S9vYtJKqYvE4PNR9WDB".isValidCryptoCurrencyAddress(
                CryptoCurrency.DOT,
                PolkadotNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "1FRMM8PEiWXYax7rpS6X4XZX1aAAxSWx1CrKTyrVYhV24fg".isValidCryptoCurrencyAddress(
                CryptoCurrency.DOT,
                PolkadotNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "5CK8D1sKNwF473wbuBP6NuhQfPaWUetNsWUNAAzVwTfxqjfr".isValidCryptoCurrencyAddress(
                CryptoCurrency.DOT,
                PolkadotNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "CpjsLDC1JFyrhm3ftC9Gs4QoyrkHKhZKtK7YqGTRFtTafgp".isValidCryptoCurrencyAddress(
                CryptoCurrency.Polkadot,
                PolkadotNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "15FKUKXC6kwaXxJ1tXNywmFy4ZY6FoDFCnU3fMbibFdeqwGw".isValidCryptoCurrencyAddress(
                CryptoCurrency.Polkadot,
                PolkadotNetwork.Mainnet
            )
        )
        Assert.assertTrue(
            "CxDDSH8gS7jecsxaRL9Txf8H5kqesLXAEAEgp76Yz632J9M".isValidCryptoCurrencyAddress(
                CryptoCurrency.DOT,
                PolkadotNetwork.Mainnet
            )
        )
    }

}
